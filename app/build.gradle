/*
 * Copyright 2020 littledavity
 */
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"
apply plugin: "com.vanniktech.dependency.graph.generator"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'
apply from: "$rootDir/ktlint.gradle"
apply from: "$rootDir/git-hooks.gradle"
apply from: "$rootDir/spotless.gradle"
apply from: "$rootDir/detekt.gradle"
apply from: "$rootDir/test-dependencies.gradle"

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "es.littledavity.chorboagenda"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument("listener", "leakcanary.FailTestOnLeakRunListener")
    }

    signingConfigs {
        release {
//            keyAlias = getLocalProperty("signing.key.alias")
//            keyPassword = getLocalProperty("signing.key.password")
//            storeFile = file(getLocalProperty("signing.store.file"))
//            storePassword = getLocalProperty("signing.store.password")
        }
    }

    buildTypes {
        debug {
            versionNameSuffix = "-dev"
            minifyEnabled false
            setTestCoverageEnabled(true)
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.getByName(name)
            setTestCoverageEnabled(false)
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    lintOptions {
//        lintConfig = rootProject.file(".lint/config.xml")
//        isCheckAllWarnings = true
//        isWarningsAsErrors = true
    }

    dynamicFeatures = [":features:chorbo_list", ":features:create"]

    androidExtensions {
        experimental = true
    }


}

dependencies {
    implementation project(path: ':core')
    implementation project(path: ':commons:ui')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'com.google.dagger:dagger:2.28.3'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.play:core:1.8.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'
    implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"
    implementation "androidx.exifinterface:exifinterface:1.2.0"
    implementation "io.coil-kt:coil:0.8.0"
    implementation "com.airbnb.android:lottie:3.4.1"
    implementation 'com.google.firebase:firebase-analytics:17.4.4'
    def nav_version = "2.3.0"

    api "androidx.navigation:navigation-fragment-ktx:$nav_version"
    api "androidx.navigation:navigation-ui-ktx:$nav_version"
    api "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    kapt 'com.google.dagger:dagger-compiler:2.28.3'

    testImplementation project(path: ':libraries:test_utils')
}
